openapi: "3.0.2"
info: 
  title: "MET hello world api"
  description: "Hello world api with all the required MET REST endpoints."
  version: "0.1"
paths:
  /api/v1/about:
    get:
      summary: "Metadata about this service."
      operationId: about
      tags:
        - meta
      responses:
        '200':
          description: Metadata about this service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aboutOK'
  /api/v1/healthz:
    get:
      summary: "Health status of this MET Hello service."
      operationId: healthz
      tags:
        - meta
      responses:
        '200':
          description: The service is ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthz'
        '503':
          description: The service is up, but something is seriously wrong and healthz will give you the status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthz'
        '500':
          description: The whole service is failing, and healthz is not able to give you a meaningful status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceFailing'

  /api/v1/hello/{name}:
    get:
      summary: "Give a name, get a nice hello."
      operationId: hello
      tags:
        - hello
      parameters:
       - name: name
         required: true
         in: path
         schema:
          type: string
         example: "Bob"
      responses:
        '200':
          description: Hello went ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helloOK'
        '503':
          description: The service can not properly handle the request at this time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceFailing'
  /api/v1beta/hello/{name}:
    get:
      summary: "Give a name, get a nice hello."
      operationId: helloBeta
      tags:
        - hello
      parameters:
       - name: name
         required: true
         in: path
         schema:
          type: string
         example: "Bob"
      responses:
        '200':
          description: Hello went ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helloOKbeta'
        '503':
          description: The service can not properly handle the request at this time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceFailing'
components:
  schemas:
    healthz:
      title: Service health report.
      type: object
      required:
      - status
      properties:
        status:
          type: string
          example: "healthy"
          enum:
          - healthy
          - unhealthy
          - critical
        description:
          type: string
          example: "Checked stock of greetings and we are good."
        errors:
          type: array
          items:
            type: string
    serviceFailing:
      title: Error message.
      type: object
      properties:
        error:
          type: string
          example: "Critial service error. Please try again later."
    helloOK:
      title: Greeting
      type: object
      properties:
        greeting:
          type: string
          example: "Hello Bob"
    helloOKbeta:
      title: Greeting beta
      type: object
      required:
        - greeting
      properties:
        greeting:
          type: string
          example: "Hello bob"
        geometry:
          type: object
          required:
          - type
          - coordinates
          properties:
            type:
              type: string
              enum:
                - POINT
            coordinates:
              type: array
              minItems: 2
              example: [60,11,100]
              items:
                type: number
    aboutOK:    
      type: object
      properties:
        name: 
          type: string
        description: 
          type: string
        termsOfService: 
          type: string
        provider:
          type: object
          properties:
            "@type":
              type: string
            name:
              type: string
